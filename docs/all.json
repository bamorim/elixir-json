{"shell":true,"revision":"7623b3a978c99a745953ea6fc071f93df1d39b8a","objects":[{"type":null,"source":"lib/json.ex:1","object_type":"ModuleObject","moduledoc":null,"module":"Elixir.JSON","id":"JSON"},{"type":"protocol","source":"lib/json/decoder.ex:16","object_type":"ModuleObject","moduledoc":"Defines the protocol required for converting raw JSON into Elixir terms\n","module":"Elixir.JSON.Decoder","id":"JSON.Decoder"},{"type":"impl","source":"lib/json/decoder.ex:27","object_type":"ModuleObject","moduledoc":null,"module":"Elixir.JSON.Decoder.BitString","id":"JSON.Decoder.BitString"},{"type":"exception","source":"lib/json/decoder.ex:1","object_type":"ModuleObject","moduledoc":null,"module":"Elixir.JSON.Decoder.Error","id":"JSON.Decoder.Error"},{"type":"impl","source":"lib/json/decoder.ex:45","object_type":"ModuleObject","moduledoc":null,"module":"Elixir.JSON.Decoder.List","id":"JSON.Decoder.List"},{"type":"exception","source":"lib/json/decoder.ex:5","object_type":"ModuleObject","moduledoc":null,"module":"Elixir.JSON.Decoder.UnexpectedEndOfBufferError","id":"JSON.Decoder.UnexpectedEndOfBufferError"},{"type":"exception","source":"lib/json/decoder.ex:9","object_type":"ModuleObject","moduledoc":null,"module":"Elixir.JSON.Decoder.UnexpectedTokenError","id":"JSON.Decoder.UnexpectedTokenError"},{"type":"protocol","source":"lib/json/encoder.ex:18","object_type":"ModuleObject","moduledoc":"Defines the protocol required for converting Elixir types into JSON and inferring their json types.\n","module":"Elixir.JSON.Encoder","id":"JSON.Encoder"},{"type":"impl","source":"lib/json/encoder.ex:155","object_type":"ModuleObject","moduledoc":null,"module":"Elixir.JSON.Encoder.Any","id":"JSON.Encoder.Any"},{"type":"impl","source":"lib/json/encoder.ex:89","object_type":"ModuleObject","moduledoc":null,"module":"Elixir.JSON.Encoder.Atom","id":"JSON.Encoder.Atom"},{"type":"impl","source":"lib/json/encoder.ex:100","object_type":"ModuleObject","moduledoc":null,"module":"Elixir.JSON.Encoder.BitString","id":"JSON.Encoder.BitString"},{"type":"exception","source":"lib/json/encoder.ex:1","object_type":"ModuleObject","moduledoc":null,"module":"Elixir.JSON.Encoder.Error","id":"JSON.Encoder.Error"},{"type":"impl","source":"lib/json/encoder.ex:84","object_type":"ModuleObject","moduledoc":null,"module":"Elixir.JSON.Encoder.Float","id":"JSON.Encoder.Float"},{"type":"impl","source":"lib/json/encoder.ex:54","object_type":"ModuleObject","moduledoc":null,"module":"Elixir.JSON.Encoder.HashDict","id":"JSON.Encoder.HashDict"},{"type":null,"source":"lib/json/encoder.ex:175","object_type":"ModuleObject","moduledoc":"Helper functions for writing JSON.Encoder instances.\n","module":"Elixir.JSON.Encoder.Helpers","id":"JSON.Encoder.Helpers"},{"type":"impl","source":"lib/json/encoder.ex:84","object_type":"ModuleObject","moduledoc":null,"module":"Elixir.JSON.Encoder.Integer","id":"JSON.Encoder.Integer"},{"type":"impl","source":"lib/json/encoder.ex:60","object_type":"ModuleObject","moduledoc":null,"module":"Elixir.JSON.Encoder.List","id":"JSON.Encoder.List"},{"type":"impl","source":"lib/json/encoder.ex:149","object_type":"ModuleObject","moduledoc":null,"module":"Elixir.JSON.Encoder.Map","id":"JSON.Encoder.Map"},{"type":"impl","source":"lib/json/encoder.ex:84","object_type":"ModuleObject","moduledoc":null,"module":"Elixir.JSON.Encoder.Number","id":"JSON.Encoder.Number"},{"type":"impl","source":"lib/json/encoder.ex:141","object_type":"ModuleObject","moduledoc":null,"module":"Elixir.JSON.Encoder.Record","id":"JSON.Encoder.Record"},{"type":"impl","source":"lib/json/encoder.ex:48","object_type":"ModuleObject","moduledoc":null,"module":"Elixir.JSON.Encoder.Tuple","id":"JSON.Encoder.Tuple"},{"type":null,"source":"lib/json/parser/bitstring.ex:1","object_type":"ModuleObject","moduledoc":null,"module":"Elixir.JSON.Parser.Bitstring","id":"JSON.Parser.Bitstring"},{"type":null,"source":"lib/json/parser/bitstring/array.ex:1","object_type":"ModuleObject","moduledoc":null,"module":"Elixir.JSON.Parser.Bitstring.Array","id":"JSON.Parser.Bitstring.Array"},{"type":null,"source":"lib/json/parser/bitstring/number.ex:1","object_type":"ModuleObject","moduledoc":null,"module":"Elixir.JSON.Parser.Bitstring.Number","id":"JSON.Parser.Bitstring.Number"},{"type":null,"source":"lib/json/parser/bitstring/object.ex:1","object_type":"ModuleObject","moduledoc":null,"module":"Elixir.JSON.Parser.Bitstring.Object","id":"JSON.Parser.Bitstring.Object"},{"type":null,"source":"lib/json/parser/bitstring/string.ex:1","object_type":"ModuleObject","moduledoc":null,"module":"Elixir.JSON.Parser.Bitstring.String","id":"JSON.Parser.Bitstring.String"},{"type":null,"source":"lib/json/parser/bitstring/unicode.ex:1","object_type":"ModuleObject","moduledoc":null,"module":"Elixir.JSON.Parser.Bitstring.Unicode","id":"JSON.Parser.Bitstring.Unicode"},{"type":null,"source":"lib/json/parser/charlist.ex:1","object_type":"ModuleObject","moduledoc":null,"module":"Elixir.JSON.Parser.Charlist","id":"JSON.Parser.Charlist"},{"type":null,"source":"lib/json/parser/charlist/array.ex:1","object_type":"ModuleObject","moduledoc":null,"module":"Elixir.JSON.Parser.Charlist.Array","id":"JSON.Parser.Charlist.Array"},{"type":null,"source":"lib/json/parser/charlist/number.ex:1","object_type":"ModuleObject","moduledoc":null,"module":"Elixir.JSON.Parser.Charlist.Number","id":"JSON.Parser.Charlist.Number"},{"type":null,"source":"lib/json/parser/charlist/object.ex:1","object_type":"ModuleObject","moduledoc":null,"module":"Elixir.JSON.Parser.Charlist.Object","id":"JSON.Parser.Charlist.Object"},{"type":null,"source":"lib/json/parser/charlist/string.ex:1","object_type":"ModuleObject","moduledoc":null,"module":"Elixir.JSON.Parser.Charlist.String","id":"JSON.Parser.Charlist.String"},{"type":null,"source":"lib/json/parser/charlist/unicode.ex:1","object_type":"ModuleObject","moduledoc":null,"module":"Elixir.JSON.Parser.Charlist.Unicode","id":"JSON.Parser.Charlist.Unicode"},{"type":"def","source":"lib/json.ex:28","signature":[["bitstring_or_char_list",[],null]],"object_type":"FunctionObject","name":"decode","module_id":"JSON","id":"decode/1","doc":"Converts a valid JSON string into an Elixir term\n\n## Examples\n\n    iex> JSON.decode(\"{\\\"result\\\":\\\"this will be an Elixir result\\\"}\")\n    {:ok, Enum.into([{\"result\", \"this will be an Elixir result\"}], Map.new)}\n","arity":1},{"type":"def","source":"lib/json.ex:44","signature":[["bitstring_or_char_list",[],null]],"object_type":"FunctionObject","name":"decode!","module_id":"JSON","id":"decode!/1","doc":null,"arity":1},{"type":"def","source":"lib/json.ex:4","signature":[["term",[],null]],"object_type":"FunctionObject","name":"encode","module_id":"JSON","id":"encode/1","doc":"Returns a JSON string representation of the Elixir term\n\n## Examples\n\n    iex> JSON.encode([result: \"this will be a JSON result\"])\n    {:ok, \"{\\\"result\\\":\\\"this will be a JSON result\\\"}\"}\n\n","arity":1},{"type":"def","source":"lib/json.ex:19","signature":[["term",[],null]],"object_type":"FunctionObject","name":"encode!","module_id":"JSON","id":"encode!/1","doc":null,"arity":1},{"type":"def","source":"lib/json/decoder.ex:15","signature":[["atom",[],"Elixir"]],"object_type":"FunctionObject","name":"__protocol__","module_id":"JSON.Decoder","id":"__protocol__/1","doc":false,"arity":1},{"type":"def","source":"lib/json/decoder.ex:20","signature":[["bitstring_or_char_list",[],null]],"object_type":"FunctionObject","name":"decode","module_id":"JSON.Decoder","id":"decode/1","doc":"Returns an atom and an Elixir term\n","arity":1},{"type":"def","source":"lib/json/decoder.ex:15","signature":[["data",[],null]],"object_type":"FunctionObject","name":"impl_for","module_id":"JSON.Decoder","id":"impl_for/1","doc":false,"arity":1},{"type":"def","source":"lib/json/decoder.ex:15","signature":[["data",[],null]],"object_type":"FunctionObject","name":"impl_for!","module_id":"JSON.Decoder","id":"impl_for!/1","doc":false,"arity":1},{"type":"def","source":"lib/json/decoder.ex:27","signature":[["atom",[],"Elixir"]],"object_type":"FunctionObject","name":"__impl__","module_id":"JSON.Decoder.BitString","id":"__impl__/1","doc":false,"arity":1},{"type":"def","source":"lib/json/decoder.ex:30","signature":[["bitstring",[],null]],"object_type":"FunctionObject","name":"decode","module_id":"JSON.Decoder.BitString","id":"decode/1","doc":null,"arity":1},{"type":"def","source":"lib/json/decoder.ex:2","signature":[["msg",[],null]],"object_type":"FunctionObject","name":"exception","module_id":"JSON.Decoder.Error","id":"exception/1","doc":null,"arity":1},{"type":"def","source":"lib/json/decoder.ex:2","signature":[["exception",[],null]],"object_type":"FunctionObject","name":"message","module_id":"JSON.Decoder.Error","id":"message/1","doc":null,"arity":1},{"type":"def","source":"lib/json/decoder.ex:45","signature":[["atom",[],"Elixir"]],"object_type":"FunctionObject","name":"__impl__","module_id":"JSON.Decoder.List","id":"__impl__/1","doc":false,"arity":1},{"type":"def","source":"lib/json/decoder.ex:48","signature":[["charlist",[],null]],"object_type":"FunctionObject","name":"decode","module_id":"JSON.Decoder.List","id":"decode/1","doc":null,"arity":1},{"type":"def","source":"lib/json/decoder.ex:6","signature":[["msg",[],null]],"object_type":"FunctionObject","name":"exception","module_id":"JSON.Decoder.UnexpectedEndOfBufferError","id":"exception/1","doc":null,"arity":1},{"type":"def","source":"lib/json/decoder.ex:6","signature":[["exception",[],null]],"object_type":"FunctionObject","name":"message","module_id":"JSON.Decoder.UnexpectedEndOfBufferError","id":"message/1","doc":null,"arity":1},{"type":"def","source":"lib/json/decoder.ex:10","signature":[["args",[],null]],"object_type":"FunctionObject","name":"exception","module_id":"JSON.Decoder.UnexpectedTokenError","id":"exception/1","doc":null,"arity":1},{"type":"def","source":"lib/json/decoder.ex:12","signature":[["exception",[],null]],"object_type":"FunctionObject","name":"message","module_id":"JSON.Decoder.UnexpectedTokenError","id":"message/1","doc":null,"arity":1},{"type":"def","source":"lib/json/encoder.ex:14","signature":[["atom",[],"Elixir"]],"object_type":"FunctionObject","name":"__protocol__","module_id":"JSON.Encoder","id":"__protocol__/1","doc":false,"arity":1},{"type":"def","source":"lib/json/encoder.ex:23","signature":[["term",[],null]],"object_type":"FunctionObject","name":"encode","module_id":"JSON.Encoder","id":"encode/1","doc":"Returns a JSON string representation of the Elixir term\n\n## Examples\n\n    iex> JSON.Encoder.encode([result: \"this will be a elixir result\"])\n    {:ok, \"{\\\"result\\\":\\\"this will be a elixir result\\\"}\"}\n\n","arity":1},{"type":"def","source":"lib/json/encoder.ex:14","signature":[["data",[],null]],"object_type":"FunctionObject","name":"impl_for","module_id":"JSON.Encoder","id":"impl_for/1","doc":false,"arity":1},{"type":"def","source":"lib/json/encoder.ex:14","signature":[["data",[],null]],"object_type":"FunctionObject","name":"impl_for!","module_id":"JSON.Encoder","id":"impl_for!/1","doc":false,"arity":1},{"type":"def","source":"lib/json/encoder.ex:35","signature":[["term",[],null]],"object_type":"FunctionObject","name":"typeof","module_id":"JSON.Encoder","id":"typeof/1","doc":"Returns an atom that reprsents the JSON type for the term\n\n## Examples\n\n    iex> JSON.Encoder.typeof([result: \"this will be a elixir result\"])\n    :object\n\n","arity":1},{"type":"def","source":"lib/json/encoder.ex:155","signature":[["atom",[],"Elixir"]],"object_type":"FunctionObject","name":"__impl__","module_id":"JSON.Encoder.Any","id":"__impl__/1","doc":false,"arity":1},{"type":"def","source":"lib/json/encoder.ex:157","signature":[["struct",[],null]],"object_type":"FunctionObject","name":"encode","module_id":"JSON.Encoder.Any","id":"encode/1","doc":null,"arity":1},{"type":"def","source":"lib/json/encoder.ex:169","signature":[["struct",[],null]],"object_type":"FunctionObject","name":"typeof","module_id":"JSON.Encoder.Any","id":"typeof/1","doc":null,"arity":1},{"type":"def","source":"lib/json/encoder.ex:89","signature":[["atom",[],"Elixir"]],"object_type":"FunctionObject","name":"__impl__","module_id":"JSON.Encoder.Atom","id":"__impl__/1","doc":false,"arity":1},{"type":"def","source":"lib/json/encoder.ex:90","signature":[["atom",[],null]],"object_type":"FunctionObject","name":"encode","module_id":"JSON.Encoder.Atom","id":"encode/1","doc":null,"arity":1},{"type":"def","source":"lib/json/encoder.ex:95","signature":[["boolean",[],null]],"object_type":"FunctionObject","name":"typeof","module_id":"JSON.Encoder.Atom","id":"typeof/1","doc":null,"arity":1},{"type":"def","source":"lib/json/encoder.ex:100","signature":[["atom",[],"Elixir"]],"object_type":"FunctionObject","name":"__impl__","module_id":"JSON.Encoder.BitString","id":"__impl__/1","doc":false,"arity":1},{"type":"def","source":"lib/json/encoder.ex:106","signature":[["bitstring",[],null]],"object_type":"FunctionObject","name":"encode","module_id":"JSON.Encoder.BitString","id":"encode/1","doc":null,"arity":1},{"type":"def","source":"lib/json/encoder.ex:138","signature":[["_",[],"Elixir"]],"object_type":"FunctionObject","name":"typeof","module_id":"JSON.Encoder.BitString","id":"typeof/1","doc":null,"arity":1},{"type":"def","source":"lib/json/encoder.ex:2","signature":[["args",[],null]],"object_type":"FunctionObject","name":"exception","module_id":"JSON.Encoder.Error","id":"exception/1","doc":null,"arity":1},{"type":"def","source":"lib/json/encoder.ex:4","signature":[["exception",[],null]],"object_type":"FunctionObject","name":"message","module_id":"JSON.Encoder.Error","id":"message/1","doc":null,"arity":1},{"type":"def","source":"lib/json/encoder.ex:84","signature":[["atom",[],"Elixir"]],"object_type":"FunctionObject","name":"__impl__","module_id":"JSON.Encoder.Float","id":"__impl__/1","doc":false,"arity":1},{"type":"def","source":"lib/json/encoder.ex:85","signature":[["number",[],null]],"object_type":"FunctionObject","name":"encode","module_id":"JSON.Encoder.Float","id":"encode/1","doc":null,"arity":1},{"type":"def","source":"lib/json/encoder.ex:86","signature":[["_",[],"Elixir"]],"object_type":"FunctionObject","name":"typeof","module_id":"JSON.Encoder.Float","id":"typeof/1","doc":null,"arity":1},{"type":"def","source":"lib/json/encoder.ex:54","signature":[["atom",[],"Elixir"]],"object_type":"FunctionObject","name":"__impl__","module_id":"JSON.Encoder.HashDict","id":"__impl__/1","doc":false,"arity":1},{"type":"def","source":"lib/json/encoder.ex:56","signature":[["dict",[],null]],"object_type":"FunctionObject","name":"encode","module_id":"JSON.Encoder.HashDict","id":"encode/1","doc":null,"arity":1},{"type":"def","source":"lib/json/encoder.ex:57","signature":[["_",[],"Elixir"]],"object_type":"FunctionObject","name":"typeof","module_id":"JSON.Encoder.HashDict","id":"typeof/1","doc":null,"arity":1},{"type":"def","source":"lib/json/encoder.ex:186","signature":[["coll",[],null]],"object_type":"FunctionObject","name":"dict_encode","module_id":"JSON.Encoder.Helpers","id":"dict_encode/1","doc":"Given an enumerable that yields tuples of `{key, value}` encode the enumerable\nas an object.\n","arity":1},{"type":"def","source":"lib/json/encoder.ex:179","signature":[["coll",[],null]],"object_type":"FunctionObject","name":"enum_encode","module_id":"JSON.Encoder.Helpers","id":"enum_encode/1","doc":"Given an enumerable encode the enumerable as an array.\n","arity":1},{"type":"def","source":"lib/json/encoder.ex:84","signature":[["atom",[],"Elixir"]],"object_type":"FunctionObject","name":"__impl__","module_id":"JSON.Encoder.Integer","id":"__impl__/1","doc":false,"arity":1},{"type":"def","source":"lib/json/encoder.ex:85","signature":[["number",[],null]],"object_type":"FunctionObject","name":"encode","module_id":"JSON.Encoder.Integer","id":"encode/1","doc":null,"arity":1},{"type":"def","source":"lib/json/encoder.ex:86","signature":[["_",[],"Elixir"]],"object_type":"FunctionObject","name":"typeof","module_id":"JSON.Encoder.Integer","id":"typeof/1","doc":null,"arity":1},{"type":"def","source":"lib/json/encoder.ex:60","signature":[["atom",[],"Elixir"]],"object_type":"FunctionObject","name":"__impl__","module_id":"JSON.Encoder.List","id":"__impl__/1","doc":false,"arity":1},{"type":"def","source":"lib/json/encoder.ex:62","signature":[["list",[],null]],"object_type":"FunctionObject","name":"encode","module_id":"JSON.Encoder.List","id":"encode/1","doc":null,"arity":1},{"type":"def","source":"lib/json/encoder.ex:72","signature":[["list",[],null]],"object_type":"FunctionObject","name":"typeof","module_id":"JSON.Encoder.List","id":"typeof/1","doc":null,"arity":1},{"type":"def","source":"lib/json/encoder.ex:149","signature":[["atom",[],"Elixir"]],"object_type":"FunctionObject","name":"__impl__","module_id":"JSON.Encoder.Map","id":"__impl__/1","doc":false,"arity":1},{"type":"def","source":"lib/json/encoder.ex:151","signature":[["map",[],null]],"object_type":"FunctionObject","name":"encode","module_id":"JSON.Encoder.Map","id":"encode/1","doc":null,"arity":1},{"type":"def","source":"lib/json/encoder.ex:152","signature":[["_",[],"Elixir"]],"object_type":"FunctionObject","name":"typeof","module_id":"JSON.Encoder.Map","id":"typeof/1","doc":null,"arity":1},{"type":"def","source":"lib/json/encoder.ex:84","signature":[["atom",[],"Elixir"]],"object_type":"FunctionObject","name":"__impl__","module_id":"JSON.Encoder.Number","id":"__impl__/1","doc":false,"arity":1},{"type":"def","source":"lib/json/encoder.ex:85","signature":[["number",[],null]],"object_type":"FunctionObject","name":"encode","module_id":"JSON.Encoder.Number","id":"encode/1","doc":null,"arity":1},{"type":"def","source":"lib/json/encoder.ex:86","signature":[["_",[],"Elixir"]],"object_type":"FunctionObject","name":"typeof","module_id":"JSON.Encoder.Number","id":"typeof/1","doc":null,"arity":1},{"type":"def","source":"lib/json/encoder.ex:141","signature":[["atom",[],"Elixir"]],"object_type":"FunctionObject","name":"__impl__","module_id":"JSON.Encoder.Record","id":"__impl__/1","doc":false,"arity":1},{"type":"def","source":"lib/json/encoder.ex:143","signature":[["record",[],null]],"object_type":"FunctionObject","name":"encode","module_id":"JSON.Encoder.Record","id":"encode/1","doc":null,"arity":1},{"type":"def","source":"lib/json/encoder.ex:144","signature":[["_",[],"Elixir"]],"object_type":"FunctionObject","name":"typeof","module_id":"JSON.Encoder.Record","id":"typeof/1","doc":null,"arity":1},{"type":"def","source":"lib/json/encoder.ex:48","signature":[["atom",[],"Elixir"]],"object_type":"FunctionObject","name":"__impl__","module_id":"JSON.Encoder.Tuple","id":"__impl__/1","doc":false,"arity":1},{"type":"def","source":"lib/json/encoder.ex:50","signature":[["term",[],null]],"object_type":"FunctionObject","name":"encode","module_id":"JSON.Encoder.Tuple","id":"encode/1","doc":null,"arity":1},{"type":"def","source":"lib/json/encoder.ex:51","signature":[["_",[],"Elixir"]],"object_type":"FunctionObject","name":"typeof","module_id":"JSON.Encoder.Tuple","id":"typeof/1","doc":null,"arity":1},{"type":"def","source":"lib/json/parser/bitstring.ex:4","signature":[["bin",[],null]],"object_type":"FunctionObject","name":"parse","module_id":"JSON.Parser.Bitstring","id":"parse/1","doc":"parses a valid JSON value, returns its elixir representation\n\n## Examples\n\n    iex> JSON.Parser.Bitstring.parse \"\"\n    {:error, :unexpected_end_of_buffer}\n\n    iex> JSON.Parser.Bitstring.parse \"face0ff\"\n    {:error, {:unexpected_token, \"face0ff\"}}\n\n    iex> JSON.Parser.Bitstring.parse \"-hello\"\n    {:error, {:unexpected_token, \"-hello\"}}\n\n    iex> JSON.Parser.Bitstring.parse \"129245\"\n    {:ok, 129245, \"\"}\n\n    iex> JSON.Parser.Bitstring.parse \"7.something\"\n    {:ok, 7, \".something\"}\n\n    iex> JSON.Parser.Bitstring.parse \"-88.22suffix\"\n    {:ok, -88.22, \"suffix\"}\n\n    iex> JSON.Parser.Bitstring.parse \"-12e4and then some\"\n    {:ok, -1.2e+5, \"and then some\"}\n\n    iex> JSON.Parser.Bitstring.parse \"7842490016E-12-and more\"\n    {:ok, 7.842490016e-3, \"-and more\"}\n\n    iex> JSON.Parser.Bitstring.parse \"null\"\n    {:ok, nil, \"\"}\n\n    iex> JSON.Parser.Bitstring.parse \"false\"\n    {:ok, false, \"\"}\n\n    iex> JSON.Parser.Bitstring.parse \"true\"\n    {:ok, true, \"\"}\n\n    iex> JSON.Parser.Bitstring.parse \"\\\"7.something\\\"\"\n    {:ok, \"7.something\", \"\"}\n\n    iex> JSON.Parser.Bitstring.parse \"\\\"-88.22suffix\\\" foo bar\"\n    {:ok, \"-88.22suffix\", \" foo bar\"}\n\n    iex> JSON.Parser.Bitstring.parse \"\\\"star -> \\\\u272d <- star\\\"\"\n    {:ok, \"star -> ✭ <- star\", \"\"}\n\n    iex> JSON.Parser.Bitstring.parse \"[]\"\n    {:ok, [], \"\"}\n\n    iex> JSON.Parser.Bitstring.parse \"[\\\"foo\\\", 1, 2, 1.5] lala\"\n    {:ok, [\"foo\", 1, 2, 1.5], \" lala\"}\n\n    iex> JSON.Parser.Bitstring.parse \"{\\\"result\\\": \\\"this will be a elixir result\\\"} lalal\"\n    {:ok, Enum.into([{\"result\", \"this will be a elixir result\"}], Map.new), \" lalal\"}\n","arity":1},{"type":"def","source":"lib/json/parser/bitstring.ex:79","signature":[["bitstring",[],null]],"object_type":"FunctionObject","name":"trim","module_id":"JSON.Parser.Bitstring","id":"trim/1","doc":"parses valid JSON whitespace if it exists, returns the rest of the buffer\n\n## Examples\n\n    iex> JSON.Parser.Bitstring.trim \"\"\n    \"\"\n\n    iex> JSON.Parser.Bitstring.trim \"xkcd\"\n    \"xkcd\"\n\n    iex> JSON.Parser.Bitstring.trim \"  \\t\\r lalala \"\n    \"lalala \"\n\n    iex> JSON.Parser.Bitstring.trim \" \\n\\t\\n fooo \\u00dflalalal \"\n    \"fooo \\u00dflalalal \"\n","arity":1},{"type":"def","source":"lib/json/parser/bitstring/array.ex:3","signature":[["json",[],null]],"object_type":"FunctionObject","name":"parse","module_id":"JSON.Parser.Bitstring.Array","id":"parse/1","doc":"parses a valid JSON array value, returns its elixir list representation\n\n## Examples\n\n    iex> JSON.Parser.Bitstring.Array.parse \"\"\n    {:error, :unexpected_end_of_buffer}\n\n    iex> JSON.Parser.Bitstring.Array.parse \"[1, 2 \"\n    {:error, :unexpected_end_of_buffer}\n\n    iex> JSON.Parser.Bitstring.Array.parse \"face0ff\"\n    {:error, {:unexpected_token, \"face0ff\"}}\n\n    iex> JSON.Parser.Bitstring.Array.parse \"[] lala\"\n    {:ok, [], \" lala\"}\n\n    iex> JSON.Parser.Bitstring.Array.parse \"[]\"\n    {:ok, [], \"\"}\n\n    iex> JSON.Parser.Bitstring.Array.parse \"[\\\"foo\\\", 1, 2, 1.5] lala\"\n    {:ok, [\"foo\", 1, 2, 1.5], \" lala\"}\n","arity":1},{"type":"def","source":"lib/json/parser/bitstring/number.ex:3","signature":[["binary",[],null]],"object_type":"FunctionObject","name":"parse","module_id":"JSON.Parser.Bitstring.Number","id":"parse/1","doc":"parses a valid JSON numerical value, returns its elixir numerical representation\n\n## Examples\n\n    iex> JSON.Parser.Bitstring.Number.parse \"\"\n    {:error, :unexpected_end_of_buffer}\n\n    iex> JSON.Parser.Bitstring.Number.parse \"face0ff\"\n    {:error, {:unexpected_token, \"face0ff\"}}\n\n    iex> JSON.Parser.Bitstring.Number.parse \"-hello\"\n    {:error, {:unexpected_token, \"hello\"}}\n\n    iex> JSON.Parser.Bitstring.Number.parse \"129245\"\n    {:ok, 129245, \"\"}\n\n    iex> JSON.Parser.Bitstring.Number.parse \"7.something\"\n    {:ok, 7, \".something\"}\n\n    iex> JSON.Parser.Bitstring.Number.parse \"7.4566something\"\n    {:ok, 7.4566, \"something\"}\n\n    iex> JSON.Parser.Bitstring.Number.parse \"-88.22suffix\"\n    {:ok, -88.22, \"suffix\"}\n\n    iex> JSON.Parser.Bitstring.Number.parse \"-12e4and then some\"\n    {:ok, -1.2e+5, \"and then some\"}\n\n    iex> JSON.Parser.Bitstring.Number.parse \"7842490016E-12-and more\"\n    {:ok, 7.842490016e-3, \"-and more\"}\n","arity":1},{"type":"def","source":"lib/json/parser/bitstring/object.ex:3","signature":[["json",[],null]],"object_type":"FunctionObject","name":"parse","module_id":"JSON.Parser.Bitstring.Object","id":"parse/1","doc":"parses a valid JSON object value, returns its elixir representation\n\n## Examples\n\n    iex> JSON.Parser.Bitstring.Object.parse \"\"\n    {:error, :unexpected_end_of_buffer}\n\n    iex> JSON.Parser.Bitstring.Object.parse \"face0ff\"\n    {:error, {:unexpected_token, \"face0ff\"}}\n\n    iex> JSON.Parser.Bitstring.Object.parse \"[] \"\n    {:error, {:unexpected_token, \"[] \"}}\n\n    iex> JSON.Parser.Bitstring.Object.parse \"[]\"\n    {:error, {:unexpected_token, \"[]\"}}\n\n    iex> JSON.Parser.Bitstring.Object.parse \"[\\\"foo\\\", 1, 2, 1.5] lala\"\n    {:error, {:unexpected_token, \"[\\\"foo\\\", 1, 2, 1.5] lala\"}}\n\n    iex> JSON.Parser.Bitstring.Object.parse \"{\\\"result\\\": \\\"this will be a elixir result\\\"} lalal\"\n    {:ok, Enum.into([{\"result\", \"this will be a elixir result\"}], Map.new), \" lalal\"}\n","arity":1},{"type":"def","source":"lib/json/parser/bitstring/string.ex:4","signature":[["json",[],null]],"object_type":"FunctionObject","name":"parse","module_id":"JSON.Parser.Bitstring.String","id":"parse/1","doc":"parses a valid JSON string, returns its elixir representation\n\n## Examples\n\n    iex> JSON.Parser.Bitstring.String.parse \"\"\n    {:error, :unexpected_end_of_buffer}\n\n    iex> JSON.Parser.Bitstring.String.parse \"face0ff\"\n    {:error, {:unexpected_token, \"face0ff\"}}\n\n    iex> JSON.Parser.Bitstring.String.parse \"-hello\"\n    {:error, {:unexpected_token, \"-hello\"}}\n\n    iex> JSON.Parser.Bitstring.String.parse \"129245\"\n    {:error, {:unexpected_token, \"129245\"}}\n\n    iex> JSON.Parser.Bitstring.String.parse \"\\\"7.something\\\"\"\n    {:ok, \"7.something\", \"\"}\n\n    iex> JSON.Parser.Bitstring.String.parse \"\\\"-88.22suffix\\\" foo bar\"\n    {:ok, \"-88.22suffix\", \" foo bar\"}\n\n    iex> JSON.Parser.Bitstring.String.parse \"\\\"star -> \\\\u272d <- star\\\"\"\n    {:ok, \"star -> ✭ <- star\", \"\"}\n\n    iex> JSON.Parser.Bitstring.String.parse \"\\\"\\\\u00df ist wunderbar\\\"\"\n    {:ok, \"ß ist wunderbar\", \"\"}\n\n    iex> JSON.Parser.Bitstring.String.parse \"\\\"Rafaëlla\\\" foo bar\"\n    {:ok, \"Rafaëlla\", \" foo bar\"}\n\n    iex> JSON.Parser.Bitstring.String.parse \"\\\"Éloise woot\\\" Éloise\"\n    {:ok, \"Éloise woot\", \" Éloise\"}\n","arity":1},{"type":"def","source":"lib/json/parser/bitstring/unicode.ex:5","signature":[["json",[],null]],"object_type":"FunctionObject","name":"parse","module_id":"JSON.Parser.Bitstring.Unicode","id":"parse/1","doc":"parses a valid chain of escaped unicode and returns the string representation,\nplus the remainder of the string\n\n## Examples\n\n    iex> JSON.Parser.Bitstring.parse \"\"\n    {:error, :unexpected_end_of_buffer}\n\n    iex> JSON.Parser.Bitstring.parse \"face0ff\"\n    {:error, {:unexpected_token, \"face0ff\"}}\n\n    iex> JSON.Parser.Bitstring.parse \"-hello\"\n    {:error, {:unexpected_token, \"-hello\"}}\n\n","arity":1},{"type":"def","source":"lib/json/parser/charlist.ex:4","signature":[["charlist",[],null]],"object_type":"FunctionObject","name":"parse","module_id":"JSON.Parser.Charlist","id":"parse/1","doc":"parses a valid JSON value, returns its elixir representation\n\n## Examples\n\n    iex> JSON.Parser.Charlist.parse ''\n    {:error, :unexpected_end_of_buffer}\n\n    iex> JSON.Parser.Charlist.parse 'face0ff'\n    {:error, {:unexpected_token, 'face0ff'}}\n\n    iex> JSON.Parser.Charlist.parse '-hello'\n    {:error, {:unexpected_token, '-hello'}}\n\n    iex> JSON.Parser.Charlist.parse '129245'\n    {:ok, 129245, ''}\n\n    iex> JSON.Parser.Charlist.parse '7.something'\n    {:ok, 7, '.something'}\n\n    iex> JSON.Parser.Charlist.parse '-88.22suffix'\n    {:ok, -88.22, 'suffix'}\n\n    iex> JSON.Parser.Charlist.parse '-12e4and then some'\n    {:ok, -1.2e+5, 'and then some'}\n\n    iex> JSON.Parser.Charlist.parse '7842490016E-12-and more'\n    {:ok, 7.842490016e-3, '-and more'}\n\n    iex> JSON.Parser.Charlist.parse 'null'\n    {:ok, nil, ''}\n\n    iex> JSON.Parser.Charlist.parse 'false'\n    {:ok, false, ''}\n\n    iex> JSON.Parser.Charlist.parse 'true'\n    {:ok, true, ''}\n\n    iex> JSON.Parser.Charlist.parse '\\\"7.something\\\"'\n    {:ok, \"7.something\", ''}\n\n    iex> JSON.Parser.Charlist.parse '\\\"-88.22suffix\\\" foo bar'\n    {:ok, \"-88.22suffix\", ' foo bar'}\n\n    iex> JSON.Parser.Charlist.parse '[]'\n    {:ok, [], ''}\n\n    iex> JSON.Parser.Charlist.parse '[\"foo\", 1, 2, 1.5] lala'\n    {:ok, [\"foo\", 1, 2, 1.5], ' lala'}\n\n    iex> JSON.Parser.Charlist.parse '{\"result\": \"this will be a elixir result\"} lalal'\n    {:ok, Enum.into([{\"result\", \"this will be a elixir result\"}], Map.new), ' lalal'}\n","arity":1},{"type":"def","source":"lib/json/parser/charlist.ex:86","signature":[["charlist",[],null]],"object_type":"FunctionObject","name":"trim","module_id":"JSON.Parser.Charlist","id":"trim/1","doc":"parses valid JSON whitespace if it exists, returns the rest of the buffer\n\n## Examples\n\n    iex> JSON.Parser.Charlist.trim ''\n    ''\n\n    iex> JSON.Parser.Charlist.trim 'xkcd'\n    'xkcd'\n\n    iex> JSON.Parser.Charlist.trim '  \\t\\r lalala '\n    'lalala '\n\n    iex> JSON.Parser.Charlist.trim ' \\n\\t\\n fooo \\u00dflalalal '\n    'fooo \\u00dflalalal '\n","arity":1},{"type":"def","source":"lib/json/parser/charlist/array.ex:3","signature":[["json",[],null]],"object_type":"FunctionObject","name":"parse","module_id":"JSON.Parser.Charlist.Array","id":"parse/1","doc":"parses a valid JSON array value, returns its elixir list representation\n\n## Examples\n\n    iex> JSON.Parser.Charlist.Array.parse ''\n    {:error, :unexpected_end_of_buffer}\n\n    iex> JSON.Parser.Charlist.Array.parse '[1, 2 '\n    {:error, :unexpected_end_of_buffer}\n\n    iex> JSON.Parser.Charlist.Array.parse 'face0ff'\n    {:error, {:unexpected_token, 'face0ff'}}\n\n    iex> JSON.Parser.Charlist.Array.parse '[] lala'\n    {:ok, [], ' lala'}\n\n    iex> JSON.Parser.Charlist.Array.parse '[]'\n    {:ok, [], ''}\n\n    iex> JSON.Parser.Charlist.Array.parse '[\"foo\", 1, 2, 1.5] lala'\n    {:ok, [\"foo\", 1, 2, 1.5], ' lala'}\n","arity":1},{"type":"def","source":"lib/json/parser/charlist/number.ex:3","signature":[["charlist",[],null]],"object_type":"FunctionObject","name":"parse","module_id":"JSON.Parser.Charlist.Number","id":"parse/1","doc":"parses a valid JSON numerical value, returns its elixir numerical representation\n\n## Examples\n\n    iex> JSON.Parser.Charlist.Number.parse ''\n    {:error, :unexpected_end_of_buffer}\n\n    iex> JSON.Parser.Charlist.Number.parse 'face0ff'\n    {:error, {:unexpected_token, 'face0ff'}}\n\n    iex> JSON.Parser.Charlist.Number.parse '-hello'\n    {:error, {:unexpected_token, 'hello'}}\n\n    iex> JSON.Parser.Charlist.Number.parse '129245'\n    {:ok, 129245, ''}\n\n    iex> JSON.Parser.Charlist.Number.parse '7.something'\n    {:ok, 7, '.something'}\n\n    iex> JSON.Parser.Charlist.Number.parse '7.4566something'\n    {:ok, 7.4566, 'something'}\n\n    iex> JSON.Parser.Charlist.Number.parse '-88.22suffix'\n    {:ok, -88.22, 'suffix'}\n\n    iex> JSON.Parser.Charlist.Number.parse '-12e4and then some'\n    {:ok, -1.2e+5, 'and then some'}\n\n    iex> JSON.Parser.Charlist.Number.parse '7842490016E-12-and more'\n    {:ok, 7.842490016e-3, '-and more'}\n","arity":1},{"type":"def","source":"lib/json/parser/charlist/object.ex:3","signature":[["json",[],null]],"object_type":"FunctionObject","name":"parse","module_id":"JSON.Parser.Charlist.Object","id":"parse/1","doc":"parses a valid JSON object value, returns its elixir Map representation\n\n## Examples\n\n    iex> JSON.Parser.Charlist.Object.parse ''\n    {:error, :unexpected_end_of_buffer}\n\n    iex> JSON.Parser.Charlist.Object.parse 'face0ff'\n    {:error, {:unexpected_token, 'face0ff'}}\n\n    iex> JSON.Parser.Charlist.Object.parse '[] '\n    {:error, {:unexpected_token, '[] '}}\n\n    iex> JSON.Parser.Charlist.Object.parse '[]'\n    {:error, {:unexpected_token, '[]'}}\n\n    iex> JSON.Parser.Charlist.Object.parse '{\"result\": \"this will be a elixir result\"} lalal'\n    {:ok, Enum.into([{\"result\", \"this will be a elixir result\"}], Map.new), ' lalal'}\n","arity":1},{"type":"def","source":"lib/json/parser/charlist/string.ex:4","signature":[["json",[],null]],"object_type":"FunctionObject","name":"parse","module_id":"JSON.Parser.Charlist.String","id":"parse/1","doc":"parses a valid JSON string, returns its elixir representation\n\n## Examples\n\n    iex> JSON.Parser.Charlist.String.parse ''\n    {:error, :unexpected_end_of_buffer}\n\n    iex> JSON.Parser.Charlist.String.parse 'face0ff'\n    {:error, {:unexpected_token, 'face0ff'}}\n\n    iex> JSON.Parser.Charlist.String.parse '-hello'\n    {:error, {:unexpected_token, '-hello'}}\n\n    iex> JSON.Parser.Charlist.String.parse '129245'\n    {:error, {:unexpected_token, '129245'}}\n\n    iex> JSON.Parser.Charlist.String.parse '\\\"7.something\\\"'\n    {:ok, \"7.something\", ''}\n\n    iex> JSON.Parser.Charlist.String.parse '\\\"star -> \\\\u272d <- star\\\"'\n    {:ok, \"star -> ✭ <- star\", ''}\n\n    iex> JSON.Parser.Charlist.String.parse '\\\"\\\\u00df ist wunderbar\\\"'\n    {:ok, \"ß ist wunderbar\", ''}\n\n    iex> JSON.Parser.Charlist.String.parse '\\\"-88.22suffix\\\" foo bar'\n    {:ok, \"-88.22suffix\", ' foo bar'}\n\n","arity":1},{"type":"def","source":"lib/json/parser/charlist/unicode.ex:5","signature":[["json",[],null]],"object_type":"FunctionObject","name":"parse","module_id":"JSON.Parser.Charlist.Unicode","id":"parse/1","doc":"parses a valid chain of escaped unicode and returns the string representation,\nplus the remainder of the string\n\n## Examples\n\n    iex> JSON.Unicode.Charlist.parse ''\n    {:error, :unexpected_end_of_buffer}\n\n    iex> JSON.Unicode.Charlist.parse 'face0ff'\n    {:error, {:unexpected_token, 'face0ff'}}\n\n    iex> JSON.Unicode.Charlist.parse '-hello'\n    {:error, {:unexpected_token, '-hello'}}\n","arity":1}],"language":"elixir","git_repo_url":"https://github.com/cblage/elixir-json.git","client_version":"0.5.6","client_name":"inch_ex","branch_name":"master","args":[]}
